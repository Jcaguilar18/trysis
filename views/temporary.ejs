<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Stock</title>
    <style>
         .inventory-table {
            width: 100%;
            border-collapse: collapse;
        }

        .inventory-table th, .inventory-table td {
            border: 1px solid #ddd;
            padding: 8px;
        }

        .inventory-table th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #4CAF50;
            color: white;
        }
    </style>
</head>
<body>
    <h1>Manage Stock</h1>
    <div>
        <button onclick="filterTable('')">All</button>
        <button onclick="filterTable(1)">Fabrication</button> 
        <button onclick="filterTable(2)">Fire Protection</button> 
        <button onclick="filterTable(3)">Electrical</button> 
    </div>

    <div>
        <span id="currentMonth"></span>
        <span id="currentDay"></span>
    </div>
    <table id="itemTable" class="inventory-table">
        <thead>
            <tr>
                <th>No.</th>
                <th>CODE</th>
                <th>MATERIAL</th>
                <th>ITEM DESCRIPTION</th>
                <th>BEGINNING</th>
                <th>INCOMING</th>
                <th>OUTGOING</th>
                <th>AVAILABLE</th>
                <th>PRICE</th>
                <th>TOTAL AMOUNT</th>
            </tr>
        </thead>
        <tbody>
            <% items.forEach((item, index) => { %>
                <tr class="<%= item.classification_id %>">
                    <td><%= index + 1 %></td>
                    <td><%= item.clustercode %></td>
                    <td><%= item.cluster_description %></td>
                    <td><%= item.material_name %></td>
                    <td><%= item.available %></td>
                    <td>
                        <input type="number" class="incoming" value="0"> <!-- Set default value to 0 -->
                    </td>
                    <td>
                        <input type="number" class="outgoing" value="0"> <!-- Set default value to 0 -->
                    </td>
                    
                    <td><%= item.available %></td>
                    <td><%= item.price %></td>
                    <td><%= (item.price * item.available).toFixed(2) %></td>
                    <td>
                        <!-- Add this line for the Save button -->
                        <button onclick="saveRowData(this.parentNode.parentNode, '<%= item.no %>','<%= item.clustercode %>', '<%= item.material_name.replace(/'/g, "&apos;") %>')">Save</button>
                    </td>
                </tr>
            <% }); %>
            
        </tbody>
    </table>
    <script>
        
        function filterTable(id) {
            var rows = document.getElementById('itemTable').getElementsByTagName('tr');
            for (var i = 1; i < rows.length; i++) { 
                var rowId = rows[i].className;
                if (id === '' || id.toString() === rowId) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }

        function populateMonthAndDay() {
            var currentDate = new Date();
            var month = currentDate.toLocaleString('en-US', { month: 'long' });
            var day = currentDate.getDate();
            document.getElementById('currentMonth').textContent = 'Month: ' + month;
            document.getElementById('currentDay').textContent = 'Day: ' + day;
        }
    
        populateMonthAndDay();

        function saveRowData(row, itemNo, clusterCode, itemDescription) {
    // Get the incoming and outgoing values
    var incomingValue = row.querySelector('.incoming').value;
    var outgoingValue = row.querySelector('.outgoing').value;

    // Check if both incoming and outgoing values were changed
    if (incomingValue !== '0' && outgoingValue !== '0') {
        alert('Only one change can be saved at a time. Please modify either incoming or outgoing, not both.');
        return;
    }

    // Create a form dynamically
    var form = document.createElement("form");
    form.setAttribute("method", "post");
    form.setAttribute("action", "/addstock");

    // Create input elements for the form to submit
    function createInput(name, value) {
        var input = document.createElement("input");
        input.setAttribute("type", "hidden");
        input.setAttribute("name", name);
        input.setAttribute("value", value);
        return input;
    }

    // Append inputs for 'no', 'clustercode', 'incoming', 'outgoing', and now 'itemDescription'
    form.appendChild(createInput("no", itemNo));
    form.appendChild(createInput("clustercode", clusterCode));
    form.appendChild(createInput("itemDescription", itemDescription)); // Use the parameter directly
    form.appendChild(createInput("incoming", incomingValue));
    form.appendChild(createInput("outgoing", outgoingValue));

    // Append the form to the document and submit
    document.body.appendChild(form);
    form.submit();
}
    </script>
</body>
</html>
