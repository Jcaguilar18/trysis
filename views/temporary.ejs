<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Manage Accounts</title>
<style>
  
  form > div {
    margin-bottom: 10px;
  }

  button[type="submit"], button.edit {
    margin-right: 10px;
  }

  .hidden {
    display: none;
  }

</style>
</head>
<body>
<h1>Manage Accounts</h1>
<% users.forEach(user => { %>
  <form action="/update-account" method="POST">
    <input type="hidden" name="userId" value="<%= user.userid %>">
    <div>
      <label>Username:</label>
      <input type="text" name="username" value="<%= user.username %>" readonly>
    </div>
    <div>
      <label>Password:</label>
      <input type="password" name="password" placeholder="New Password" readonly>
    </div>
    <div>
      <label>Status:</label>
      <select name="status" disabled>
        <option value="active" <%= user.status === 'active' ? 'selected' : '' %>>Active</option>
        <option value="inactive" <%= user.status === 'inactive' ? 'selected' : '' %>>Inactive</option>
      </select>
    </div>
    <div>
      <label>First Name:</label>
      <input type="text" name="firstname" value="<%= user.firstname %>" readonly>
    </div>
    <div>
      <label>Last Name:</label>
      <input type="text" name="lastname" value="<%= user.lastname %>" readonly>
    </div>
    <button type="button" class="edit" onclick="enableEditing(this)">Edit</button>
    <button type="submit" class="hidden">Save</button>
  </form>
<% }); %>

<script>
function enableEditing(editButton) {
  const form = editButton.closest('form');
  form.querySelectorAll('input, select').forEach(element => {
    element.removeAttribute('readonly');
    element.disabled = false;
  });
  editButton.classList.add('hidden');
  form.querySelector('button[type="submit"]').classList.remove('hidden');
}
</script>
</body>
</html>


app.get("/manage", async (req, res) => {
  try {
    res.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
  res.setHeader("Pragma", "no-cache");
  res.setHeader("Expires", "0");
  
      // Fetch user data from the database
      const usersResult = await db.query("SELECT * FROM users");
      const users = usersResult.rows;
      
      var roleOfQueryResult = await db.query("SELECT role FROM users WHERE username = $1", [req.session.username]);
      var roleOf = roleOfQueryResult.rows[0]?.role;

  
      res.render("manage.ejs", { users, roleOf });
  } catch (err) {
      console.log(err);
      res.redirect("/login");
  }
});