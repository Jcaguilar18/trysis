<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Stock</title>
    <link rel="stylesheet" href="./styles/manage-stock-page.css"/>
</head>
<body>
    <div class="web-page">
        <div class="top-bar">
            <img class="trisys-logo" src="./assets/trisys-logo.png"/>
            <p class="current-user-text">INVENTORY MANAGER</p>
            <img class="profile-picture" src="./assets/profile-picture.png"/>
          </div>
          <div class="bottom-page-part">
            <div class="upper-part">
                <img class="item-icon" src="./assets/group.png"/>
                <p class="manage-stock-text">Manage Stock</p>
                <% 
                var date = new Date();
                var options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };
                var formattedDate = date.toLocaleDateString('en-US', options);
                %>
                <p class="date-text"><%= formattedDate %></p>
              </div>
              <!-- Category buttons -->
              <div class="middle-buttons-area">
                <button class="all-text" onclick="filterTable('')">All</button>
                <button class="fabrication-text" onclick="filterTable(1)">Fabrication</button> <!-- Pass classification id as argument -->
                <button class="fire-protection-text" onclick="filterTable(2)">Fire Protection</button> <!-- Pass classification id as argument -->
                <button class="electrical-text" onclick="filterTable(3)">Electrical</button> <!-- Pass classification id as argument -->
                <div class="search-bar">
                    <input class="search-input" type="text" placeholder="Search Code here..."/>
                    <img class="search-icon" src="./assets/searchicon-1.png"/>
                </div>
                <img class="on-off-switch" src="./assets/onoffswitch-1.png"/>
                <img class="a-to-z-icon" src="./assets/atoz.png"/>
              </div>
              <div class="upper-table-part">
                <!--TASK: Month & Day Sorting Function + Add a Function that Can Sort Through by Code-->
                <!--TASK: Error Handling if date is wrong-->
                  <p class="month-text">MONTH:</p>
                  <select id="month" class="month-dropdown">
                    <option value="January">January</option>
                    <option value="February">February</option>
                    <option value="February">March</option>
                    <option value="February">April</option>
                    <option value="February">May</option>
                    <option value="February">June</option>
                    <option value="February">July</option>
                    <option value="February">August</option>
                    <option value="February">September</option>
                    <option value="February">October</option>
                    <option value="February">November</option>
                    <option value="February">December</option>
                  </select>
                  <p class="day-text">DAY:</p>
                  <input id="day" type="number" min="1" max="31" class="day-input"/>
              </div>
              <div class="table-section">
                <table id = "itemTable">
                    <thead>
                        <tr>
                            <th>No.</th>
                            <th>CODE</th>
                            <th>MATERIAL</th>
                            <th>ITEM DESCRIPTION</th>
                            <th>BEGINNING</th>
                            <th>INCOMING</th>
                            <th>OUTGOING</th>
                            <th>AVAILABLE</th>
                            <th>PRICE</th>
                            <th>TOTAL AMOUNT</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <% items.forEach((item, index) => { %>
                            <tr class="<%= item.classification_id %>">
                                <td><%= index + 1 %></td>
                                <td><%= item.clustercode %></td>
                                <td><%= item.cluster_description %></td>
                                <td><%= item.material_name %></td>
                                <td><%= item.available %></td>
                                <td>
                                    <input type="number" class="incoming input-field" value="0"> <!-- Set default value to 0 -->
                                </td>
                                <td>
                                    <input type="number" class="outgoing input-field" value="0"> <!-- Set default value to 0 -->
                                </td>
                                <!--
                                <td>
                                    <button onclick="decreaseValue('incoming<%= item.no %>')">
                                      <img src="./assets/Decrease_Button.png" alt="Decrease">
                                    </button>
                                    <input type="number" id="incoming<%= item.no %>" value="0" class="input-field incoming">
                                    <button onclick="increaseValue('incoming<%= item.no %>')">
                                      <img src="./assets/Increase_Button.png" alt="Increase">
                                    </button>
                                  </td>
                                <td>
                                    <button onclick="decreaseValue('outgoing<%= item.no %>')">
                                        <img src="./assets/Decrease_Button.png" alt="Decrease">
                                      </button>
                                    <input type="number" id="outgoing<%= item.no %>" value="0" class="input-field incoming">
                                    <button onclick="increaseValue('outgoing<%= item.no %>')">
                                        <img src="./assets/Increase_Button.png" alt="Increase">
                                      </button>
                                </td>
                            -->
                                <td><%= item.available %></td>
                                <td><%= item.price %></td>
                                <td><%= (item.price * item.available).toFixed(2) %></td>
                                <td>
                                    <!-- Add this line for the Save button -->
                                    <button class="save-button" onclick="saveRowData(this.parentNode.parentNode, '<%= item.no %>','<%= item.clustercode %>', '<%= item.material_name.replace(/'/g, "&apos;") %>')">Save</button>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
                </div>
                <div class="lower-section">
                    <!--TASK: Make a Pagination function, maybe 10 records shown at a time-->
                    <div class="showing-area-text-area">
                      <p class="showing-area-text">Showing 1-10 | Out of 1574</p>
                    </div>
                    <!--TASK: Make this buttons work through pagination-->
                        <img class="up-arrow" src="./assets/auto-group-titq.png"/> 
                        <img class="down-arrow" src="./assets/auto-group-titq.png"/>
                  </div>
          </div>
    </div>
    <%- include('sidebar') %>
    <script>

        function populateMonthAndDay() {
            var currentDate = new Date();
            var month = currentDate.toLocaleString('en-US', { month: 'long' });
            var day = currentDate.getDate();
            document.getElementById('currentMonth').textContent = 'Month: ' + month;
            document.getElementById('currentDay').textContent = 'Day: ' + day;
        }
    
        populateMonthAndDay();

        function filterTable(id) {
            var rows = document.getElementById('itemTable').getElementsByTagName('tr');
            for (var i = 1; i < rows.length; i++) { 
                var rowId = rows[i].className;
                if (id === '' || id.toString() === rowId) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }

        function populateMonthAndDay() {
            var currentDate = new Date();
            var month = currentDate.toLocaleString('en-US', { month: 'long' });
            var day = currentDate.getDate();
            document.getElementById('currentMonth').textContent = 'Month: ' + month;
            document.getElementById('currentDay').textContent = 'Day: ' + day;
        }
    
        populateMonthAndDay();

        function saveRowData(row, itemNo, clusterCode, itemDescription) {
    // Get the incoming and outgoing values
    var incomingValue = row.querySelector('.incoming').value;
    var outgoingValue = row.querySelector('.outgoing').value;

    // Check if both incoming and outgoing values were changed
    if (incomingValue !== '0' && outgoingValue !== '0') {
        alert('Only one change can be saved at a time. Please modify either incoming or outgoing, not both.');
        return;
    }

    // Create a form dynamically
    var form = document.createElement("form");
    form.setAttribute("method", "post");
    form.setAttribute("action", "/addstock");

    // Create input elements for the form to submit
    function createInput(name, value) {
        var input = document.createElement("input");
        input.setAttribute("type", "hidden");
        input.setAttribute("name", name);
        input.setAttribute("value", value);
        return input;
    }

    // Append inputs for 'no', 'clustercode', 'incoming', 'outgoing', and now 'itemDescription'
    form.appendChild(createInput("no", itemNo));
    form.appendChild(createInput("clustercode", clusterCode));
    form.appendChild(createInput("itemDescription", itemDescription)); // Use the parameter directly
    form.appendChild(createInput("incoming", incomingValue));
    form.appendChild(createInput("outgoing", outgoingValue));

    // Append the form to the document and submit
    document.body.appendChild(form);
    form.submit();
}


    </script>
</body>
</html>